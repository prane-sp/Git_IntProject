<apex:page tabStyle="SPIRE__tab" >
    <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/jquery.min.js')}"></script>
    <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/force.com.js.rest.toolkit/forcetk.js')}"></script>
    
   
    
    <html xmlns:ng="http://angularjs.org"  lang="en">
        <head>
            <meta charset="utf-8" name="viewport" content="width=device-width initial-scale=1.0"/>
            <!--<apex:stylesheet value="//netdna.bootstrapcdn.com/bootswatch/2.3.1/flatly/bootstrap.min.css"/>-->
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/bootstrap-combined.min.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/ng-grid/ng-grid.css')}"/>
           
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/select2.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/joint.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/ng-grid/ng-grid.css')}"/>
            
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/jquery.min.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/select2/select2.min.js')}" type="text/javascript"></script>    
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/angular-all/angular.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/twitter-bootstrap/bootstrap.min.js')}"></script>      
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/ui-select2/select2.js')}" type="text/javascript"></script>
    
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/angular-ui/angular-ui.min.js')}"></script>            
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/ui-bootstrap-tpls-0.6.0.js')}"></script>                        
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/ng-grid/ng-grid.min.js')}"></script>
            
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/highcharts/highcharts.src.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/highcharts/highchart-plain.js')}"></script>
            
            
            
             
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/highcharts/exporting.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/bootstrap-daterangepicker-master/moment.min.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/jquery.knob.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/jquery.sparkline.js')}"></script>
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/numeral.min.js')}"></script> 
            <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/ng-table/ng-table.js')}"></script>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/3.4.4/select2-bootstrap.css"></link>
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/select2-bootstrap.css')}"/>
            <script src= "{!URLFOR($Resource.Account_Summary, 'app/js/lib/angular-table/angular-table.js')}"></script>
        
            <apex:stylesheet value="{!URLFOR($Resource.Account_Summary, 'app/css/app.css')}"/>
            
        </head>
        <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/underscore/underscore.js')}"></script>
        <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/angular-all/angular-strap.js')}"></script>
       
        <script src="{!URLFOR($Resource.Account_Summary, 'app/js/lib/jointjs/joint.nojquery.js')}"></script>           
           
        <script type="text/javascript">
           
                    
                    var myapp = angular.module('AccountCampaigns', ['ngGrid', 'chartsExample.directives', 'ui.bootstrap', '$strap.directives', 'ngTable', 'angular-table']);
                    myapp.config(function ($routeProvider, $locationProvider, $httpProvider) {
                        $locationProvider.html5Mode(true);
                    });
                    
                    
                    
                    var contrl= myapp.controller('AccountCampaignsController', function ($scope, $filter, $q, $location, $window, AccountCampaignService) {
                        $scope.currentlyViewingStatus = "Marketing Qualified";
                        $scope.showDetails = false;
                        $scope.acctCampaignsGridColumnDefs = [
                                { field: 'Campaign.Name', displayName: 'Campaign Name',width: 275 },
                                { field: 'Campaign.Type', displayName: 'Campaign Type',width: 175 },
                                { field: 'Lead.ConvertedAccount.Name', displayName: 'Converted Account',width: 200 },                                
                                { field: 'Lead.Name', displayName: 'Name', width: 200, cellTemplate: '<div style="text-align:center;text-decoration: underline;"><a href="/{{row.entity.Id}}" target="_blank">{{row.entity.Lead.Name}}</a> </div>'},
                                { field: 'Lead.Owner.Name', displayName: 'Owner',width: 150 },
                                { field: 'Lead.ConvertedDate', displayName: 'Converted Date' ,width: 150, cellFilter : 'date:"MMM d, y"'},                                
                                { field: 'Lead.Status', displayName: 'Lead Status' ,width: 150},
                                { field: 'Lead.LeadSource', displayName: 'Lead Source' ,width: 150},  
                                { field: 'Lead.ConvertedOpportunity.StageName', displayName: 'Opp Status' ,width: 150}, 
                                { field: 'Lead.ConvertedOpportunity.Amount', displayName: 'Opp Value' ,width: 150},                                 
                                { field: 'Lead.ConvertedOpportunity.IsClosed', displayName: 'Closed' ,width: 150}, 
                            ];
                            
                                      
                        $scope.leadRecordsData = []; 
                        $scope.histogramData = {};
                        $scope.transitionProcessChartData = {};
                         
                        $scope.acctCampaignRecordsGridOptions = { 
                            data: 'acctCampaignRecords.records' ,
                            columnDefs: $scope.acctCampaignsGridColumnDefs,
                            showGroupPanel: true,
                            showFooter: true,
                            showFilter: true,
                            enableColumnResize: true,
                            enableHighlighting: true,
                            enablePaging: false,
                            showColumnMenu: true,
                            
                            totalServerItems: 'acctCampaignRecords.records.length',
                            groups: ['Campaign.Type', 'Lead.ConvertedAccount.Name'],
                            sortInfo: {
                                fields: ['Lead.ConvertedDate'],
                                directions: ['desc']
                            },
                            groupsCollapsedByDefault: true, 
                            rowHeight: 40
                        };
                        
                        $scope.getNextRecords = function() {
                           if($scope.acctCampaignRecords.done)
                               return;
                           var nextURL = $scope.acctCampaignRecords.nextRecordsUrl;
                           
                           AccountCampaignService.getNextRecords(nextURL).then(function(data) {
                               
                               $scope.acctCampaignRecords.records =  $scope.acctCampaignRecords.records.concat(data.records);                                                              
                               $scope.acctCampaignRecords.done = data.done;
                               $scope.acctCampaignRecords.nextRecordsUrl = data.nextRecordsUrl;
                               $scope.updateCharts()
                           })
                       };
                        $scope.collapseGrid = function (isExpanded) {

                            _.each($scope.acctCampaignRecordsGridOptions.ngGrid.rowFactory.aggCache, function (r) {
                                r.setExpand(isExpanded);
                            });
                
                            if (!$scope.$$phase) {
                                $scope.$apply();
                            }
                
                        };
                        $scope.timeFrame = '180';
                        $scope.fetchCampaignRecords = function() {
                            AccountCampaignService.getAllItems($scope.timeFrame).then(function(data){
                                // Unique records only
                                //_.uniq($scope.acctCampaignRecords.records, false, function(d) { return d.Lead.Id;})
                                $scope.acctCampaignRecords = data;
                                $scope.updateCharts();
                                
                            });
                        };
                        
                        $scope.updateCharts = function() {
                             $scope.makeCampaignTypeDistChart();
                             $scope.makeLeadStatusDistChart();
                             $scope.makeOppStatusDistChart();
                        };
                        $scope.makeLeadStatusDistChart = function () {

                            
                            var chData = _.pairs(_.countBy(_.pluck($scope.acctCampaignRecords.records, 'Lead'), 'Status')).sort();
                
                            $scope.leadStatusChart = {
                                options: {
                                    chart: {
                                        type: 'pie'
                                    }
                                },
                                series: [
                                    {
                                        type: 'pie',
                                        name: 'Total',
                                        data: chData
                                    }
                                ],
                                title: {
                                    text: 'Lead Status Distribution'
                                },
                                plotOptions: {
                                    pie: {
                                        allowPointSelect: true,
                                        cursor: 'pointer',
                                        dataLabels: {
                                            enabled: true,
                                            color: 'brown',
                                            connectorColor: 'blue',
                                            format: '{point.name}: {point.percentage:.0f}%',
                                             style: {
                                                
                                                width : '75'
                                            }
                        
                                        }
                                    }
                                },
                            };
                
                        };
                        $scope.makeCampaignTypeDistChart = function () {
                            var items = _.groupBy($scope.acctCampaignRecords.records, function(d) { return d.Campaign.Type})
                            var campGroupedByLeadStatus = {};
                            _.each(_.keys(items), function (d) {  var val = items[d]; campGroupedByLeadStatus[d] = _.countBy(val, function(it) {return it.Lead.Status});})
                            var chData = _.pairs(_.countBy(_.pluck($scope.acctCampaignRecords.records, 'Campaign'), 'Type')).sort();
                
                            $scope.campaignTypeChart = {
                                options: {
                                    chart: {
                                        type: 'pie'
                                    }
                                },
                                series: [
                                    {
                                        type: 'pie',
                                        name: 'Total',
                                        data: chData
                                    }
                                ],
                                title: {
                                    text: 'Campaign Type'
                                },
                                tooltip: {
                                    formatter: function() {
                                        var obj = campGroupedByLeadStatus[this.point.name];
                                        var detailStr = '';
                                        _.each(_.keys(obj), function(d) {
                                            detailStr+= d + ': ' + obj[d] +  '<br/>';
                                        });
                                        return '<b>' +  this.point.name + ': Total - ' +  this.y+ ' ( ' + Highcharts.numberFormat(this.percentage, 0) + '% )</b><br/><br/>'
                                            + '<b>Details:</b><br/>' + detailStr;
                                    }
                                },
                                plotOptions: {
                                    pie: {
                                        allowPointSelect: true,
                                        cursor: 'pointer',
                                        dataLabels: {
                                            enabled: true,
                                            color: 'blue',
                                            connectorColor: 'red',
                                            format: '{point.name}: {point.percentage:.0f}%',
                                            style: {
                                                
                                                width : '75'
                                            }
                        
                                        }
                                    }
                                },
                            };
                
                        };
                        $scope.makeOppStatusDistChart = function () {

                            var  items = _.pluck(_.pluck(_.uniq($scope.acctCampaignRecords.records, false, function(d) {return d.Lead.Id;}), 'Lead') , 'ConvertedOpportunity')
                            var chData = _.pairs(_.countBy(items, function(d) { return d != null ? d.StageName : 'Did not Convert'}));
                            
                            $scope.oppStatusChart = {
                                options: {
                                    chart: {
                                        type: 'pie'
                                    }
                                },
                                series: [
                                    {
                                        type: 'pie',
                                        name: 'Total',
                                        data: chData
                                    }
                                ],
                                title: {
                                    text: 'Opportunity Status'
                                },
                                plotOptions: {
                                    pie: {
                                        allowPointSelect: true,
                                        cursor: 'pointer',
                                        dataLabels: {
                                            enabled: true,
                                            color: 'blue',
                                            connectorColor: 'red',
                                            format: '{point.name}: {point.percentage:.0f}%',
                                            style: {
                                                
                                                width : '75'
                                            }
                        
                                        }
                                    }
                                },
                            };
                
                        };
                        $scope.fetchCampaignRecords();
                    });
                    
                    var client = new forcetk.Client();
                    client.setSessionToken('{!$Api.Session_ID}');
                    client.proxyUrl = null;
                    client.instanceUrl = '';
                    myapp.factory('AccountCampaignService', function($http, $rootScope, $q) {
                        return {
                         
                        getResultsForQuery: function(q) {
                            var deferred = $q.defer();                                
                            console.log("Executing query: " + q);
                            client.query(q, function(response){
                                $rootScope.$apply(function() {
                                    deferred.resolve(response);           
                                });                                                                
                            });                                
                            //Returning the promise object
                            return deferred.promise;
                        }, 
                        getNextRecords: function(nextUrl) {
                            var deferred = $q.defer();                                
                            console.log("Executing query for next set of records: " + nextUrl);
                            client.queryMore(nextUrl, function(response) {
                                console.log(response); 
                                $rootScope.$apply(function() {
                                    deferred.resolve(response);           
                                }); 
                               
                            });                             
                            //Returning the promise object
                            return deferred.promise;
                        },
                        
                        getAllItems: function(timeFrame){
                            //Creating a deferred object
                            var deferred = $q.defer();
                            var query = "SELECT CampaignId, Id, Campaign.Name, Campaign.Type, Lead.Id, Lead.IsConverted, Lead.LeadSource, Lead.ConvertedAccount.Name,  Lead.ConvertedOpportunity.StageName, Lead.ConvertedOpportunity.IsClosed, Lead.ConvertedOpportunityId, Lead.ConvertedOpportunity.Amount, Lead.ConvertedDate, Lead.Owner.Name, Lead.Name, Lead.Status ,Status FROM CampaignMember where  Lead.Id != NULL and Lead.CreatedDate = LAST_N_DAYS:" 
                            + timeFrame + " and Lead.IsConverted= True ";
                            console.log("Executing query: " + query);
                            client.query(query, function(response){
                                //console.log(response);
                                $rootScope.$apply(function() {
                                    deferred.resolve(response);           
                                });
                                
                                
                            });
                            
                            
                            //Returning the promise object
                            return deferred.promise;
                        },
                        
                        
                        
                      }
                    }); 
         </script>  
         <body ng-app="AccountCampaigns">
            <style>
                h1 {
                    font-size: 25px;
                    line-height: 1;
                    text-align: center;
                   
                }
                .addTotalRow {
                    border-top: 5px solid #252CE0 !important;
                }
                h4 {
                    font-size: 17.5px;
                    }
               .h1Heading {
                    margin: 10px 0px 10px 0px; 
               }
               .tablevalue {
                    font-size: 20px;
                    font-weight: bold;
                    text-decoration: none;
                    line-height: 1em;
                    color: black;
               } 
               .tablevaluelink {
                        font-size: 20px;
                        font-weight: bold;
                        text-decoration: none;
                        line-height: 1
                        
                        
                        
                        
                        ;
                        color: deepskyblue;
                    }
                .tabledesclink {
                    font-size: 15px;
                    font-weight: bold;
                    line-height: 1em;
                    color: #26ac01;
                }
                a {
                    cursor:pointer;
                }
                .link-tools  { 
                    display: none 
                }
                #paper {
                   position: relative;
                  
                   display: inline-block;
                   background: transparent;
                   overflow: hidden;
                }
                #paper svg {
                   background: transparent;
                }
                #paper svg .link {
                   z-index: 2;
                  
                }
                .html-element {
                   position: absolute;
                   background: #A4D53A;
                   /* Make sure events are propagated to the JointJS element so, e.g. dragging works.*/
                   pointer-events: none;
                   -webkit-user-select: none;
                   border-radius: 4px;
                   border: 2px solid #2980B9;
                   box-shadow: inset 0 0 5px black, 2px 2px 1px gray;
                   padding: 5px;
                   box-sizing: border-box;
                   z-index: 2;
                }
                .html-element select,
                .html-element input,
                .html-element button {
                   /* Enable interacting with inputs only. */
                   pointer-events: auto;   
                }
                .blah {
                    margin-top:100px;
                }
                .blah, .weekTransitions {
                   pointer-events: auto;   
                }
                
                .html-element button.delete {
                   color: white;
                   border: none;
                   background-color: #C0392B;
                   border-radius: 20px;
                   width: 15px;
                   height: 15px;
                   line-height: 15px;
                   text-align: middle;
                   position: absolute;
                   top: -15px;
                   left: -15px;
                   padding: 0;
                   margin: 0;
                   font-weight: bold;
                   cursor: pointer;
                }
                .html-element button.delete:hover {
                   width: 20px;
                   height: 20px;
                   line-height: 20px;
                }
                .html-element select {
                   position: absolute;
                   right: 2px;
                   bottom: 28px;
                }
                .html-element input {
                   position: absolute;
                   bottom: 0;
                   left: 0;
                   right: 0;
                   border: none;
                   color: #333;
                   padding: 5px;
                   height: 16px;
                }
                .html-element label {
                   color: #333;
                   text-shadow: 1px 0 0 lightgray;
                   font-weight: bold;
                }
                .label {
                
                }
                .html-element span {
                   position: absolute;
                   top: 2px;
                   right: 9px;
                   color: white;
                   font-size: 10px;
                }
                #countLabel {
                    font-size: 26px;
                    
                }

            </style>
            <div ng-controller="AccountCampaignsController" class="row">
                <div class="text-center" style="margin-top:25px;margin-bottom:25px;color:royalblue;">
                    <h1>Accounts with Campaigns and Leads</h1>   
                </div>
                   
                
                <div class="container-fluid text-center">
                    <div class="btn-group">
                        <button type="button" class="btn btn-small" ng-model="timeFrame" btn-radio="'30'" ng-change='fetchCampaignRecords()'>Last Month</button>                                       
                        <button type="button" class="btn btn-small" ng-model="timeFrame" btn-radio="'90'" ng-change='fetchCampaignRecords()'>Last 3 Months</button>
                        <button type="button" class="btn btn-small" ng-model="timeFrame" btn-radio="'180'" ng-change='fetchCampaignRecords()'>Last 6 Months</button>
                        <button type="button" class="btn btn-small" ng-model="timeFrame" btn-radio="'365'" ng-change='fetchCampaignRecords()'>Last Year</button>
                        <button type="button" class="btn btn-small" ng-model="timeFrame" btn-radio="'10000'" ng-change='fetchCampaignRecords()'>All</button>
                    </div>
                </div> 
                 
                <div class = 'container offset2' >
                     <div ng-hide= 'acctCampaignRecords.done'>
                        <button type="button" class="btn-primary" ng-click="getNextRecords()" >Fetch More Records &raquo;</button>
                        <h6>(Showing records {{ acctCampaignRecords.records.length}} of {{acctCampaignRecords.totalSize}})</h6>
                         
                    </div>
                </div> 
                <div class = 'container' >
                    <div class="span4 chartDiv">
                        <chart value="campaignTypeChart" type="pie" height="400"></chart>
                    </div> 
                    <div class="span4 chartDiv">
                        <chart value="leadStatusChart" type="pie" height="400"></chart>
                    </div>
                    <div class="span4 chartDiv">
                        <chart value="oppStatusChart" type="pie" height="400"></chart>
                    </div>
                  
                </div> 
                <div style="margin-left:25px;">                    
                    <h1>Campaign Members with Leads and Account</h1>                    
                </div>       
                <div class="container-fluid">
                     <!--<h1>{{currentlyViewingStatus}} Records <h6>(Showing records {{leadRecordsData.records.length}} of {{leadRecordsData.totalSize}})</h6></h1>
                     <button type="button" class="btn-primary" ng-click="getNextRecords()" ng-hide= 'leadRecordsData.done'>Fetch More Records &raquo;</button>
                     -->
                      
                     <button type="button" ng-show="acctCampaignRecordsGridOptions.ngGrid.config.groups.length > 0" ng-click="collapseGrid(false)" class="btn btn-mini">Expand &raquo; </button>
                     <button type="button" ng-show="acctCampaignRecordsGridOptions.ngGrid.config.groups.length > 0" ng-click="collapseGrid(true)" class="btn btn-mini">Collapse &raquo;</button>
    
                     <div class="gridStyle" ng-grid="acctCampaignRecordsGridOptions" style = "border: 1px solid rgb(212,212,212);height:600px;">
                     </div>
                 </div>
                     
            </div>
            
        </body>
     </html>
</apex:page>